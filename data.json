[{"Array": {"Easy": ["CreateTargetArrayInTheGivenOrder.java", "FindTheHighestAltitude.java", "FlippingAnImage.java", "HowManyNumbersAreSmallerThanTheCurrentNumber.java", "KidsWithTheGreatestNumberOfCandies.java", "MeanOfArrayAfterRemovingSomeElements.java", "MinimumTimeVisitingAllPoints.java", "MoveZeroes.java", "NumberOfGoodPairs.java", "PlusOne.java", "RunningSumOf1DArray.java", "ShuffleTheArray.java", "TwoSum.java", "XOROperationInAnArray.java"],"Medium": ["ContainerWithMostWater.java", "FindFirstAndLastPositionOfElementInSortedArray.java", "RotateImage.java", "SearchInA2DMatrix.java", "SortColors.java", "SpiralMatrix.java", "SpiralMatrixII.java", "SpiralMatrixIII.java"]},"String": {"Easy": ["AddBinary.java", "CheckIfTheSentenceIsPangram.java", "CheckIfTwoStringArraysAreEquivalent.java", "CheckIfWordEqualsSummationOfTwoWords.java", "DefangingAnIPAddress.java", "GoalParserInterpretation.java", "ReverseString.java", "SortingTheSentence.java", "ValidPalindrome.java", "ValidParenthesis.java"],"Hard": ["ValidNumber.java"],"Medium": ["GroupAnagrams.java", "StringToIntegerAtoi.java", "ZigzagConversion.java"]},"Tree": {"Easy": ["BinaryTreePaths.java", "ConvertSortedArrayIntoBST.java", "InvertBinaryTree.java", "MaximumDepthOfBinaryTree.java", "MinimumDepthOfBinaryTree.java", "PathSum.java", "SameTree.java", "SearchInABinarySearchTree.java", "SumOfLeftLeaves.java", "SymmetricTree.java"],"Hard": ["BinaryTreeCameras.java"],"Medium": ["BinaryTreeInOrderTraversal.java", "BinaryTreeLevelOrderTraversal.java", "BinaryTreePostOrderTraversal.java", "BinaryTreePreOrderTraversal.java", "BinaryTreeZigzagLevelOrderTraversal.java", "FlattenBinaryTreeToLinkedList.java", "InsertIntoABinarySearchTree.java"]},}]